#ifndef _D1981_USECASE1_DSP_H
#define _D1981_USECASE1_DSP_H

const u8 UseCase1_48k_ASRC_SRCCommander[] = {
// Tell command interpreter that there are 323 commands including this one
0x76, 0x43,
0x77, 0x01,
0x78, 0x05,
// * reset the framework *
0x76, 0xaa,
0x77, 0xaa,
0x78, 0xaa,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   size: 32
0x76, 0x20,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   size: 32
0x76, 0x20,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 32
0x76, 0x20,
0x77, 0x00,
0x78, 0x00,
// * reset filter coefficient heap and pointers *
0x76, 0x01,
0x77, 0xe0,
0x78, 0xee,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: -3197262
0x76, 0xb2,
0x77, 0x36,
0x78, 0xcf,
//   coefficient value: 7262379
0x76, 0xab,
0x77, 0xd0,
0x78, 0x6e,
//   coefficient value: 3420739
0x76, 0x43,
0x77, 0x32,
0x78, 0x34,
//   coefficient value: -6841167
0x76, 0xb1,
0x77, 0x9c,
0x78, 0x97,
//   coefficient value: 3420739
0x76, 0x43,
0x77, 0x32,
0x78, 0x34,
//   coefficient value: -4032473
0x76, 0x27,
0x77, 0x78,
0x78, 0xc2,
//   coefficient value: 8174550
0x76, 0xd6,
0x77, 0xbb,
0x78, 0x7c,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   coefficient value: -8386429
0x76, 0x83,
0x77, 0x08,
0x78, 0x80,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: -3767480
0x76, 0x48,
0x77, 0x83,
0x78, 0xc6,
//   coefficient value: 7939967
0x76, 0x7f,
0x77, 0x27,
0x78, 0x79,
//   coefficient value: 650
0x76, 0x8a,
0x77, 0x02,
0x78, 0x00,
//   coefficient value: -395
0x76, 0x75,
0x77, 0xfe,
0x78, 0xff,
//   coefficient value: 650
0x76, 0x8a,
0x77, 0x02,
0x78, 0x00,
//   coefficient value: -4017976
0x76, 0xc8,
0x77, 0xb0,
0x78, 0xc2,
//   coefficient value: 8150129
0x76, 0x71,
0x77, 0x5c,
0x78, 0x7c,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   coefficient value: -6959188
0x76, 0xac,
0x77, 0xcf,
0x78, 0x95,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
// * Create function instance 0 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: Mix2Mono
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   3 buffer pointers
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   'Input1' points to ADCB_Buf (left)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   'Input2' points to ADCB_Buf (right)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer3 (left)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   2 parameters
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Gain : 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
//   Block size (mono samples) : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 1 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: StereoToMono
0x76, 0x28,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SA_In_Buf (stereo)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SA_In_Buf (left)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 2 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: ASRC_StereoIn init
0x76, 0x4a,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 3 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: ASRC_StereoIn
0x76, 0x49,
0x77, 0x00,
0x78, 0x00,
//   4 buffer pointers
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (stereo)
0x76, 0x38,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer1 (stereo)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'pPersistentAlignedXmem' points to StaticBuff1 (stereo)
0x76, 0x2e,
0x77, 0x00,
0x78, 0x00,
//   'pScratchXmem' points to DynBuffer0 (stereo)
0x76, 0x17,
0x77, 0x00,
0x78, 0x00,
//   5 parameters
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   Rate conversion : 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   Output block size : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Floor of input block size : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Nominal time step : 786432
0x76, 0x00,
0x77, 0x00,
0x78, 0x0c,
//   Nominal loop increment : 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   Reserved states
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 4 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: PolyphaseResamplerMono init
0x76, 0x18,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 5 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: PolyphaseResamplerMono
0x76, 0x21,
0x77, 0x00,
0x78, 0x00,
//   4 buffer pointers
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer2 (left)
0x76, 0x1b,
0x77, 0x00,
0x78, 0x00,
//   'Resampler filter coefficients' points to FilterWeights48to16 (stereo)
0x76, 0x59,
0x77, 0x00,
0x78, 0x00,
//   'Delay line' points to StaticBuff3 (stereo)
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   6 parameters
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   Downsampling facotr (Ndown) : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Number of phases (Mup) : 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Input Block size (samples) : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Output Block size (samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Number of weights per phase : 17
0x76, 0x11,
0x77, 0x00,
0x78, 0x00,
//   Delay line size : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 6 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: Mix2MonoIndependentGains
0x76, 0x51,
0x77, 0x00,
0x78, 0x00,
//   3 buffer pointers
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   'Input1' points to I2SA_In_Buf (left)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   'Input2' points to DynBuffer2 (left)
0x76, 0x1b,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   3 parameters
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Input1 Gain : 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   Input2 Gain : 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 7 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: DynamicCompressorMonoNTB init
0x76, 0x32,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 8 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: DynamicCompressorMonoNTB
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   43 parameters
0x76, 0x2b,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   TAV : 17458
0x76, 0x32,
0x77, 0x44,
0x78, 0x00,
//   1-TAV : 8371150
0x76, 0xce,
0x77, 0xbb,
0x78, 0x7f,
//   Prevoius Mean Square Value Left (low part) : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Left (high part) : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Right (low part) : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Right (high part) : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   CT : -131072
0x76, 0x00,
0x77, 0x00,
0x78, 0xfe,
//   CS : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Make Up Gain : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M1 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M2 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M3 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M4 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   T0 : -4485190
0x76, 0xba,
0x77, 0x8f,
0x78, 0xbb,
//   T1 : -131072
0x76, 0x00,
0x77, 0x00,
0x78, 0xfe,
//   T2 : -131072
0x76, 0x00,
0x77, 0x00,
0x78, 0xfe,
//   T3 : -131072
0x76, 0x00,
0x77, 0x00,
0x78, 0xfe,
//   T4 : -131072
0x76, 0x00,
0x77, 0x00,
0x78, 0xfe,
//   C0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   C1 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   C2 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   C3 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   C4 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   shift0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Attack Constant : 175
0x76, 0xaf,
0x77, 0x00,
0x78, 0x00,
//   Release Constant : 175
0x76, 0xaf,
0x77, 0x00,
0x78, 0x00,
//   NT : -4485190
0x76, 0xba,
0x77, 0x8f,
0x78, 0xbb,
//   Noise Hold Counter : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Noise Hold Period : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Noise Gate Attack Constant : 175
0x76, 0xaf,
0x77, 0x00,
0x78, 0x00,
//   Noise Gate Release Constant : 175
0x76, 0xaf,
0x77, 0x00,
0x78, 0x00,
//   Noise Gate Attenuation : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Gain Profile Pointer : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Previous gain filter input : 1048576
0x76, 0x00,
0x77, 0x00,
0x78, 0x10,
//   Previous gain : 1048576
0x76, 0x00,
0x77, 0x00,
0x78, 0x10,
//   Hysteresis State: 0 = attacking 1 = releasing : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Hysteresis Limit Low : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Hysteresis Limit How : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Gain Required dB : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Subsample Counter : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Subsample Count Period : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 9 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono init
0x76, 0x36,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 10 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono
0x76, 0x35,
0x77, 0x00,
0x78, 0x00,
//   5 buffer pointers
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Delay line' points to StaticBuff5 (stereo)
0x76, 0x32,
0x77, 0x00,
0x78, 0x00,
//   'Scratch memory' points to DynBuffer0 (stereo)
0x76, 0x17,
0x77, 0x00,
0x78, 0x00,
//   'Weights' points to AllPassWeights.txt (stereo)
0x76, 0x4e,
0x77, 0x00,
0x78, 0x00,
//   3 parameters
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   No. biquad sections : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Left shift : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 11 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BufferCopyMono
0x76, 0x43,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACB_Buf (left)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 12 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BufferCopyMono
0x76, 0x43,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACC_Buf (left)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 13 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: MonoToStereo
0x76, 0x27,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer1 (left)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACA_Buf (stereo)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 48
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 14 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono init
0x76, 0x36,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 15 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono
0x76, 0x35,
0x77, 0x00,
0x78, 0x00,
//   5 buffer pointers
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer3 (left)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer3 (left)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   'Delay line' points to StaticBuff4 (stereo)
0x76, 0x31,
0x77, 0x00,
0x78, 0x00,
//   'Scratch memory' points to DynBuffer0 (stereo)
0x76, 0x17,
0x77, 0x00,
0x78, 0x00,
//   'Weights' points to AllPassWeights.txt (stereo)
0x76, 0x4e,
0x77, 0x00,
0x78, 0x00,
//   3 parameters
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   No. biquad sections : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Left shift : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 16 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: GainMono
0x76, 0x16,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer3 (left)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DynBuffer3 (left)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   2 parameters
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Gain : 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
//   Block size (mono samples) : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 17 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: ASRC_StereoOut init
0x76, 0x4a,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 18 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: ASRC_StereoOut
0x76, 0x4b,
0x77, 0x00,
0x78, 0x00,
//   4 buffer pointers
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to DynBuffer3 (stereo)
0x76, 0x1d,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SB_Out_Buf (stereo)
0x76, 0x3e,
0x77, 0x00,
0x78, 0x00,
//   'pPersistentAlignedXmem' points to StaticBuff2 (stereo)
0x76, 0x2f,
0x77, 0x00,
0x78, 0x00,
//   'pScratchXmem' points to DynBuffer0 (stereo)
0x76, 0x17,
0x77, 0x00,
0x78, 0x00,
//   5 parameters
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   Rate conversion : 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   Input block size : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Floor of output block size : 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   Nominal time step : 786432
0x76, 0x00,
0x77, 0x00,
0x78, 0x0c,
//   Nominal loop increment : 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   Reserved states
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 19 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: schedule manager
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * set main config *
0x76, 0x99,
0x77, 0x99,
0x78, 0x99,
//   block processing interrupt trigger size: 96
0x76, 0x60,
0x77, 0x00,
0x78, 0x00,
//   ADCS: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   DACS: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   I2S: configure timestamps and buffering mode
0x76, 0x25,
0x77, 0x00,
0x78, 0x00,
//   master clock is 0x000003
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 20
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 14
0x76, 0x0e,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 17
0x76, 0x11,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
};
const u16 UseCase1_48k_ASRC_SRCCommander_SIZE = 969;




const u8 UseCase1_DRC_DISABLED_SRC[] = {
// Tell command interpreter that there are 34 commands including this one
0x76, 0x22,
0x77, 0x00,
0x78, 0x05,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
//76 02 0
//77 00 0
//78 00 0
//   function pointer: 4
//76 04 0
//77 00 0
//78 00 0
//   function pointer: 7
//76 07 0
//77 00 0
//78 00 0
//   function pointer: 9
//76 09 0
//77 00 0
//78 00 0
//   function pointer: 14
//76 0E 0
//77 00 0
//78 00 0
//   function pointer: 17
//76 11 0
//77 00 0
//78 00 0
//   function pointer: 19
//76 13 0
//77 00 0
//78 00 0
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
//76 08 0
//77 00 0
//78 00 0
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
};
const u16 UseCase1_DRC_DISABLED_SRC_SIZE = 102;




const u8 UseCase1_DRC_ENABLED_SRC[] = {
// Tell command interpreter that there are 37 commands including this one
0x76, 0x25,
0x77, 0x00,
0x78, 0x05,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
//76 02 0
//77 00 0
//78 00 0
//   function pointer: 4
//76 04 0
//77 00 0
//78 00 0
//   function pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 9
//76 09 0
//77 00 0
//78 00 0
//   function pointer: 14
//76 0E 0
//77 00 0
//78 00 0
//   function pointer: 17
//76 11 0
//77 00 0
//78 00 0
//   function pointer: 19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
};
const u16 UseCase1_DRC_ENABLED_SRC_SIZE = 111;


const u8 LynxUseCase1Commander_Gain1With16K_I2S1MIX[] = {
// Tell command interpreter that there are 271 commands including this one
0x76, 0x0f,
0x77, 0x01,
0x78, 0x05,
// * reset the framework *
0x76, 0xaa,
0x77, 0xaa,
0x78, 0xaa,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: I2SA_In_Buf (R)
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: I2SB_In_Buf (L)
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add an I/O buffer and set its block size *
0x76, 0x10,
0x77, 0x10,
0x78, 0x10,
//   buffer: I2SB_Out_Buf (L)
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
// * add a dynamic buffer and set its size *
0x76, 0x77,
0x77, 0x77,
0x78, 0x77,
//   size: 32
0x76, 0x20,
0x77, 0x00,
0x78, 0x00,
// * reset filter coefficient heap and pointers *
0x76, 0x01,
0x77, 0xe0,
0x78, 0xee,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: -3197262
0x76, 0xb2,
0x77, 0x36,
0x78, 0xcf,
//   coefficient value: 7262379
0x76, 0xab,
0x77, 0xd0,
0x78, 0x6e,
//   coefficient value: 3420739
0x76, 0x43,
0x77, 0x32,
0x78, 0x34,
//   coefficient value: -6841167
0x76, 0xb1,
0x77, 0x9c,
0x78, 0x97,
//   coefficient value: 3420739
0x76, 0x43,
0x77, 0x32,
0x78, 0x34,
//   coefficient value: -4032473
0x76, 0x27,
0x77, 0x78,
0x78, 0xc2,
//   coefficient value: 8174550
0x76, 0xd6,
0x77, 0xbb,
0x78, 0x7c,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   coefficient value: -8386429
0x76, 0x83,
0x77, 0x08,
0x78, 0x80,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: -3767480
0x76, 0x48,
0x77, 0x83,
0x78, 0xc6,
//   coefficient value: 7939967
0x76, 0x7f,
0x77, 0x27,
0x78, 0x79,
//   coefficient value: 650
0x76, 0x8a,
0x77, 0x02,
0x78, 0x00,
//   coefficient value: -395
0x76, 0x75,
0x77, 0xfe,
0x78, 0xff,
//   coefficient value: 650
0x76, 0x8a,
0x77, 0x02,
0x78, 0x00,
//   coefficient value: -4017976
0x76, 0xc8,
0x77, 0xb0,
0x78, 0xc2,
//   coefficient value: 8150129
0x76, 0x71,
0x77, 0x5c,
0x78, 0x7c,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
//   coefficient value: -6959188
0x76, 0xac,
0x77, 0xcf,
0x78, 0x95,
//   coefficient value: 4194304
0x76, 0x00,
0x77, 0x00,
0x78, 0x40,
// * add a dynamic coefficient buffer, set its size and coefficients *
0x76, 0x00,
0x77, 0xe0,
0x78, 0xee,
//   size: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   coefficient value: 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
// * Create function instance 0 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: Mix3Mono
0x76, 0x22,
0x77, 0x00,
0x78, 0x00,
//   4 buffer pointers
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   'Input1' points to I2SA_In_Buf (left) //pp0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   'Input2' points to I2SA_In_Buf (right) //pp1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   'Input3' points to I2SB_In_Buf (left) //pp2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SB_In_Buf (left) //pp3
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   2 parameters
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Gain : 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 1 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: Mix2Mono
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   3 buffer pointers
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   'Input1' points to ADCB_Buf (left) //pp4
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   'Input2' points to ADCB_Buf (right) //pp5
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to ADCB_Buf (left) //pp6
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   2 parameters
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Gain : 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 2 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: DynamicCompressorMonoNTB init
0x76, 0x32,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 3 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: DynamicCompressorMonoNTB
0x76, 0x30,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (left) //pp7
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SB_In_Buf (left) //pp8
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   43 parameters
0x76, 0x2b,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8 : 2
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   TAV : 52265
0x76, 0x29,
0x77, 0xcc,
0x78, 0x00,
//   1-TAV : 8336343
0x76, 0xd7,
0x77, 0x33,
0x78, 0x7f,
//   Prevoius Mean Square Value Left (low part) : 0 : 5
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Left (high part) : 0 : 6
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Right (low part) : 0 : 7
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Prevoius Mean Square Value Right (high part) : 0 : 8
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   CT : -1306684
0x76, 0xc4,
0x77, 0x0f,
0x78, 0xec,
//   CS : 3774874
0x76, 0x9a,
0x77, 0x99,
0x78, 0x39,
//   Make Up Gain : 391871
0x76, 0xbf,
0x77, 0xfa,
0x78, 0x05,
//   M0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   M1 : 943718
0x76, 0x66,
0x77, 0x66,
0x78, 0x0e,
//   M2 : 1887437
0x76, 0xcd,
0x77, 0xcc,
0x78, 0x1c,
//   M3 : 2831155
0x76, 0x33,
0x77, 0x33,
0x78, 0x2b,
//   M4 : 3774874
0x76, 0x9a,
0x77, 0x99,
0x78, 0x39,
//   T0 : -1742096
0x76, 0xf0,
0x77, 0x6a,
0x78, 0xe5,
//   T1 : -1567931
0x76, 0x45,
0x77, 0x13,
0x78, 0xe8,
//   T2 : -1393766
0x76, 0x9a,
0x77, 0xbb,
0x78, 0xea,
//   T3 : -1219601
0x76, 0xef,
0x77, 0x63,
0x78, 0xed,
//   T4 : -1045437
0x76, 0x43,
0x77, 0x0c,
0x78, 0xf0,
//   C0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   C1 : 215478
0x76, 0xb6,
0x77, 0x49,
0x78, 0x03,
//   C2 : 58680
0x76, 0x38,
0x77, 0xe5,
0x78, 0x00,
//   C3 : -78525
0x76, 0x43,
0x77, 0xcd,
0x78, 0xfe,
//   C4 : -196137
0x76, 0xd7,
0x77, 0x01,
0x78, 0xfd,
//   shift0 : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Attack Constant : 52265
0x76, 0x29,
0x77, 0xcc,
0x78, 0x00,
//   Release Constant : 5241
0x76, 0x79,
0x77, 0x14,
0x78, 0x00,
//   NT : -1742096
0x76, 0xf0,
0x77, 0x6a,
0x78, 0xe5,
//   Noise Hold Counter : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Noise Hold Period : 3200
0x76, 0x80,
0x77, 0x0c,
0x78, 0x00,
//   Noise Gate Attack Constant : 10479
0x76, 0xef,
0x77, 0x28,
0x78, 0x00,
//   Noise Gate Release Constant : 10479
0x76, 0xef,
0x77, 0x28,
0x78, 0x00,
//   Noise Gate Attenuation : -261247
0x76, 0x81,
0x77, 0x03,
0x78, 0xfc,
//   Gain Profile Pointer : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Previous gain filter input : 1048576
0x76, 0x00,
0x77, 0x00,
0x78, 0x10,
//   Previous gain : 1048576
0x76, 0x00,
0x77, 0x00,
0x78, 0x10,
//   Hysteresis State: 0 = attacking 1 = releasing : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Hysteresis Limit Low : -84
0x76, 0xac,
0x77, 0xff,
0x78, 0xff,
//   Hysteresis Limit How : 84
0x76, 0x54,
0x77, 0x00,
0x78, 0x00,
//   Gain Required dB : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Subsample Counter : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Subsample Count Period : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 4 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono init
0x76, 0x36,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 5 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono
0x76, 0x35,
0x77, 0x00,
0x78, 0x00,
//   5 buffer pointers
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (left) //pp9
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SB_In_Buf (left) //pp10
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Delay line' points to StaticBuff2 (stereo)
0x76, 0x2f,
0x77, 0x00,
0x78, 0x00,
//   'Scratch memory' points to DynBuffer1 (stereo)
0x76, 0x19,
0x77, 0x00,
0x78, 0x00,
//   'Weights' points to AllPassWeights.txt (stereo)
0x76, 0x4e,
0x77, 0x00,
0x78, 0x00,
//   3 parameters
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   No. biquad sections : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Left shift : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 6 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BufferCopyMono
0x76, 0x43,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (left) //pp11
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACC_Buf (left) //pp12
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 7 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BufferCopyMono
0x76, 0x43,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (left) //pp13
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACB_Buf (left) //pp14
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 8 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: MonoToStereo
0x76, 0x27,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to I2SB_In_Buf (left) //pp15
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to DACA_Buf (stereo) //pp16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   1 parameters
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 9 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono init
0x76, 0x36,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 10 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: BiquadCascadeMono
0x76, 0x35,
0x77, 0x00,
0x78, 0x00,
//   5 buffer pointers
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to ADCB_Buf (left) //pp17
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to ADCB_Buf (left) //pp18
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   'Delay line' points to StaticBuff1 (stereo)
0x76, 0x2e,
0x77, 0x00,
0x78, 0x00,
//   'Scratch memory' points to DynBuffer0 (stereo)
0x76, 0x17,
0x77, 0x00,
0x78, 0x00,
//   'Weights' points to AllPassWeights.txt (stereo)
0x76, 0x4e,
0x77, 0x00,
0x78, 0x00,
//   3 parameters
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   No. biquad sections : 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   Left shift : 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 11 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: GainMono
0x76, 0x16,
0x77, 0x00,
0x78, 0x00,
//   2 buffer pointers
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   'Input' points to ADCB_Buf (left) //pp19
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   'Output' points to I2SB_Out_Buf (left) //pp20
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   2 parameters
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Gain : 8388607
0x76, 0xff,
0x77, 0xff,
0x78, 0x7f,
//   Block size (mono samples) : 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   Reserved states
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * Create function instance 12 *
0x76, 0x44,
0x77, 0x44,
0x78, 0x44,
//   Type: schedule manager
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   no ports
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no parameters
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   no state
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
// * set main config *
0x76, 0x99,
0x77, 0x99,
0x78, 0x99,
//   block processing interrupt trigger size: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   ADCS: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   DACS: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   I2S: configure timestamps and buffering mode
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   master clock is 0x000001
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  21
0x76, 0x15,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 14
0x76, 0x0e,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 17
0x76, 0x11,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 20
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (R)
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   I2SB_In_Buf (L)
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   I2SB_Out_Buf (L)
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
};
#define LynxUseCase1Commander_Gain1With16K_I2S1MIX_SIZE	(sizeof(LynxUseCase1Commander_Gain1With16K_I2S1MIX)/2)



const u8 LynxUseCase1_DRC_ENABLED_I2S1MIX[] = {
// Tell command interpreter that there are 50 commands including this one
0x76, 0x31,
0x77, 0x00,
0x78, 0x05,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 4
//76 04 0
//77 00 0
//78 00 0
//   function pointer: 9
//76 09 0
//77 00 0
//78 00 0
//   function pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  21
0x76, 0x15,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 14
0x76, 0x0e,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 17
0x76, 0x11,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 20
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (R)
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   I2SB_In_Buf (L)
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   I2SB_Out_Buf (L)
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
};
#define LynxUseCase1_DRC_ENABLED_I2S1MIX_SIZE	(sizeof(LynxUseCase1_DRC_ENABLED_I2S1MIX)/2)



const u8 LynxUseCase1_DRC_DISABLED_I2S1MIX[] = {
// Tell command interpreter that there are 37 commands including this one
0x76, 0x2c,
0x77, 0x00,
0x78, 0x05,
// * Create function schedule *
0x76, 0x88,
0x77, 0x88,
0x78, 0x88,
//   Number of one time function instances
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   Number of functions in schedule: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 2
//76 02 0
//77 00 0
//78 00 0
//   function pointer: 4
//76 04 0
//77 00 0
//78 00 0
//   function pointer: 9
//76 09 0
//77 00 0
//78 00 0
//   function pointer: 12
//76 0C 0
//77 00 0
//78 00 0
//   function pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 3
//76 03 0
//77 00 0
//78 00 0
//   function pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 7
0x76, 0x07,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 8
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   function pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
// * Create ping pong schedule *
0x76, 0xff,
0x77, 0xff,
0x78, 0xff,
//   Number of ping pong pointers in schedule  19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 0
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 1
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 2
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 3
0x76, 0x03,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 4
0x76, 0x04,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 5
0x76, 0x05,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 6
0x76, 0x06,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 7
//76 07 0
//77 00 0
//78 00 0
//   ping pong pointer: 8
//76 08 0
//77 00 0
//78 00 0
//   ping pong pointer: 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 10
0x76, 0x0a,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 11
0x76, 0x0b,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 12
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 13
0x76, 0x0d,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 14
0x76, 0x0e,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 15
0x76, 0x0f,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 16
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 17
0x76, 0x11,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 18
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 19
0x76, 0x13,
0x77, 0x00,
0x78, 0x00,
//   ping pong pointer: 20
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
// * Create new block pointer schedule *
0x76, 0x20,
0x77, 0x20,
0x78, 0x20,
//   Number of block pointers in schedule 9
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (L)
0x76, 0x08,
0x77, 0x00,
0x78, 0x00,
//   ADCB_Buf (R)
0x76, 0x09,
0x77, 0x00,
0x78, 0x00,
//   DACA_Buf (L)
0x76, 0x10,
0x77, 0x00,
0x78, 0x00,
//   DACB_Buf (L)
0x76, 0x12,
0x77, 0x00,
0x78, 0x00,
//   DACC_Buf (L)
0x76, 0x14,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (L)
0x76, 0x00,
0x77, 0x00,
0x78, 0x00,
//   I2SA_In_Buf (R)
0x76, 0x01,
0x77, 0x00,
0x78, 0x00,
//   I2SB_In_Buf (L)
0x76, 0x02,
0x77, 0x00,
0x78, 0x00,
//   I2SB_Out_Buf (L)
0x76, 0x0c,
0x77, 0x00,
0x78, 0x00,
};
#define LynxUseCase1_DRC_DISABLED_I2S1MIX_SIZE	(sizeof(LynxUseCase1_DRC_DISABLED_I2S1MIX)/2)

#endif

